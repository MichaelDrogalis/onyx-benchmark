---
- name: Install Git
  package:
    name: git

- name: Install Daemon
  package:
    name: daemon

- name: Install add-apt-repostory
  apt: name=software-properties-common state=latest

- name: Add Oracle Java Repository
  apt_repository: repo='ppa:webupd8team/java'

- name: Accept Java 8 Licence
  shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | tee /etc/oracle-java-8-licence-acceptance | /usr/bin/debconf-set-selections
  args:
    creates: /etc/oracle-java-8-licence-acceptance

- name: Install Oracle Java 8
  apt: name={{item}} state=latest
  with_items:
    - oracle-java8-installer
    - ca-certificates
    - oracle-java8-set-default

- name: Create the directory for Onyx-related repos
  file:
    path: /srv/onyx-repos
    state: directory
    mode: 0755
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"
    recurse: yes

- name: Clone Onyx core
  become_user: "{{ remote_user }}"
  git:
    repo: https://github.com/onyx-platform/onyx.git
    dest: /srv/onyx-repos/onyx
    force: yes
    version: "{{ onyx_core_version }}"

- name: Clone Onyx benchmark
  become_user: "{{ remote_user }}"
  git:
    repo: https://github.com/onyx-platform/onyx-benchmark.git
    dest: /srv/onyx-repos/onyx-benchmark
    force: yes
    version: "{{ onyx_benchmark_version }}"

- name: Ensure that Lein directory exists
  file:
    path: "/srv/leiningen-{{ lein_version }}"
    state: directory
    mode: 0755
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"
    recurse: yes

- name: Download Leiningen
  get_url:
    url: "https://raw.github.com/technomancy/leiningen/{{ lein_version }}/bin/lein"
    dest: "/srv/leiningen-{{ lein_version }}/lein"
    mode: 0755

- name: Link Lein into user binaries
  file:
    dest: /usr/bin/lein
    src: "/srv/leiningen-{{ lein_version }}/lein"
    state: link

- name: Install core version to local Maven repository
  shell: lein install
  become_user: "{{ remote_user }}"
  args:
    chdir: /srv/onyx-repos/onyx

- name: Kill the Aeron process
  shell: daemon --name aeron-media-driver --stop || true

- name: Kill the Peer process
  shell: daemon --name onyx-peers --stop || true

- name: Export log level
  shell: "export TIMBRE_LOG_LEVEL={{ onyx_log_level }}"

- name: Run the Aeron Media Driver
  shell: "daemon -D /srv/onyx-repos/onyx-benchmark --name aeron-media-driver -- su {{ remote_user }} -c \"lein run -m onyx-benchmark.aeron-media-driver\""

- name: Run the Onyx Peers
  shell: "daemon -D /srv/onyx-repos/onyx-benchmark --name onyx-peers -- su {{ remote_user }} -c \"lein run -m onyx-benchmark.peer {{ groups.zookeeper | join(',') }} {{ onyx_deployment_id }} {{ onyx_n_virtual_peers }} {{ onyx_subscriber_count }} aeron\""

- name: Run the Onyx job to be benchmarked
  shell: "lein run -m onyx-benchmark.submit {{ groups.zookeeper | join(',') }} {{ groups.metrics[0] }} {{ riemann_port }} {{ onyx_deployment_id }} {{ onyx_batch_size }}"
  args:
    chdir: /srv/onyx-repos/onyx-benchmark
  run_once: true