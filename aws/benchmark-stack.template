{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Onyx Benchmark Cluster",
	"Parameters" : {
		"KeyPair" : {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances", 
			"Type" : "String",
			"MaxLength": "64", 
			"MinLength": "1"
		},
		"AccessKeyId": {
			"Description": "AWS access key.",
			"Type": "String",
			"NoEcho": "True"
		},
		"SecretAccessKey": {
			"Description": "AWS secret key.",
			"Type": "String",
			"NoEcho": "True"
		},
		"OnyxLogLevel": {
			"Description": "Log level for Onyx benchmark run.",
			"Type": "String",
			"Default": "info"
		},
		"OnyxMessaging": {
			"Description": "Messaging Onyx benchmark run.",
			"Type": "String",
			"Default": "netty"
		},
		"MetricsNumberOfInstances" : {
			"Description" : "Number of instances in the cluster",
			"Type" : "Number",
			"Default" : "1"
		},
		"ZooKeeperNumberOfInstances" : {
			"Description" : "Number of instances in the cluster",
			"Type" : "Number",
			"Default" : "1"
		},
		"PeersNumberOfInstances" : {
			"Description" : "Number of instances in the cluster",
			"Type" : "Number",
			"Default" : "1"
		},
		"PeerSpotPrice" : {
			"Description" : "Spot price to bid on for the Peer EC2 machine",
			"Type" : "Number",
			"Default" : "0.7"
		},
		"VirtualPeers": {
			"Description": "Number of virtual peers per peer instance.",
			"Type": "Number",
			"Default": 4
		},
		"BenchmarkGitCommit" : {
			"Description" : "The git commit SHA for the benchmark code that should be run. Will be combined with the OnyxGitCommit and used as deployment id",
			"Type": "String"
		},
		"OnyxGitCommit" : {
			"Description" : "The git commit SHA for the onyx library version that should be used. Will be combined with the benchmark git commit and used as deployment id",
			"Type": "String"
		},
		"RunId" : {
			"Description" : "The run number for this bench (make sure to increment if you're using the same benchmark and onyx commit SHAs",
				"Type": "String"
		},
		"AvailabilityZone" :
        {
			"Description" : "The AZ to launch instances into",
			"Type" : "String"
        },
		"PeersInstanceType" : {
			"Description" : "Type of EC2 instance to launch. Choose the one which allows HVM AMIs",
			"Type" : "String",
			"Default" : "c4.large"},

		"MetricsInstanceType" : {
			"Description" : "Type of EC2 instance to launch. Choose the one which allows HVM AMIs",
			"Type" : "String",
			"Default" : "c4.large"},

		"ZooKeeperInstanceType" : {
			"Description" : "Type of EC2 instance to launch. Choose the one which allows HVM AMIs",
			"Type" : "String",
			"Default" : "c4.large"}
	},
	"Mappings" : {
		"AWSRegionalAMIs" : {
			"us-east-1" : {"name": "Northern Virginia", "64HVM" : "ami-9a562df2" }
		}
	},
	"Resources" : {
		"ZooKeeperClusterGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"DependsOn" : "GatewayToInternet",
			"Properties" : {
				"LaunchConfigurationName" : { "Ref" : "ZooKeeperLaunchConfig" },
				"DesiredCapacity" : { "Ref" : "ZooKeeperNumberOfInstances"},
				"MinSize" : "1",
				"MaxSize" : "15",
				"AvailabilityZones" : [ { "Ref": "AvailabilityZone" } ],
				"VPCZoneIdentifier" : [{ "Ref" : "PublicSubnet" }],
				"Tags" : [ {"Key" : "StackID", "Value" : { "Ref" : "AWS::StackId"}, "PropagateAtLaunch" : "true" },
					   {"Key" : "stack-name", "Value" : { "Ref": "AWS::StackName" }, "PropagateAtLaunch" : "true" },
					   {"Key" : "stack-region", "Value" : { "Ref": "AWS::Region" }, "PropagateAtLaunch" : "true" },
					   {"Key" : "stack-role", "Value" : "zookeeper", "PropagateAtLaunch" : "true" }]
			},
		"CreationPolicy" : {
			"ResourceSignal" : {
				"Timeout" : "PT30M"
			}
		    }
		},
		"ZooKeeperLaunchConfig" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"DependsOn" : "GatewayToInternet",
			"Properties" : {
				"InstanceType" : { "Ref" : "ZooKeeperInstanceType"},
				"SpotPrice" : { "Ref" : "PeerSpotPrice" } ,
				"KeyName" : { "Ref" : "KeyPair" },
				"ImageId" : { "Fn::FindInMap" : [ "AWSRegionalAMIs", { "Ref": "AWS::Region" }, "64HVM" ] },
				"AssociatePublicIpAddress" : "true",
				"SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
				"UserData": {
					"Fn::Base64" : {
						"Fn::Join" : [
							"",
							[
								"#!/bin/bash\n",
								"export LANG=en_US.UTF-8\n",
								"export HOME=/home/ubuntu\n",
								"wget -t 20 https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/13.10/x86_64/chefdk_0.1.0-1_amd64.deb\n",
								"dpkg -i chefdk_0.1.0-1_amd64.deb\n",
								"apt-get update\n",
								"apt-get install -y git\n",
								"git clone https://github.com/onyx-platform/onyx-benchmark.git\n",
								"chown -R ubuntu:ubuntu onyx-benchmark\n",
								"cd onyx-benchmark/chef/ec2\n",
								"berks install &> /home/ubuntu/berks-install.log\n",
								"berks vendor vendors &> /home/ubuntu/berks-vendors.log\n",
								"chef-solo -j zk-node.json -c solo.rb &> /home/ubuntu/chef.log\n",
								"cfn-signal -e $? ",
								"         --stack ", { "Ref" : "AWS::StackName" },
								"         --resource ZooKeeperClusterGroup ",
								"         --region ", { "Ref" : "AWS::Region" }
							]
						]
					}
				}
			}
		},
		"MetricsClusterGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"DependsOn" : "GatewayToInternet",
			"Properties" : {
				"LaunchConfigurationName" : { "Ref" : "MetricsLaunchConfig" },
				"DesiredCapacity" : { "Ref" : "MetricsNumberOfInstances"},
				"MinSize" : "1",
				"MaxSize" : "15",
				"AvailabilityZones" : [ { "Ref": "AvailabilityZone" } ],
				"VPCZoneIdentifier" : [{ "Ref" : "PublicSubnet" }],
				"Tags" : [ {"Key" : "StackID", "Value" : { "Ref" : "AWS::StackId"}, "PropagateAtLaunch" : "true" },
					   {"Key" : "stack-name", "Value" : { "Ref": "AWS::StackName" }, "PropagateAtLaunch" : "true" },
					   {"Key" : "stack-region", "Value" : { "Ref": "AWS::Region" }, "PropagateAtLaunch" : "true" },
				           {"Key" : "stack-role", "Value" : "metrics", "PropagateAtLaunch" : "true" } ]
			},
		"CreationPolicy" : {
			"ResourceSignal" : {
				"Timeout" : "PT30M"
			}
		   }
		},
		"MetricsLaunchConfig" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"DependsOn" : "GatewayToInternet",
			"Properties" : {
				"InstanceType" : { "Ref" : "MetricsInstanceType"},
				"SpotPrice" : { "Ref" : "PeerSpotPrice" } ,
				"KeyName" : { "Ref" : "KeyPair" },
				"ImageId" : { "Fn::FindInMap" : [ "AWSRegionalAMIs", { "Ref": "AWS::Region" }, "64HVM" ] },
				"AssociatePublicIpAddress" : "true",
				"SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
				"UserData": {
					"Fn::Base64" : {
						"Fn::Join" : [
							"",
							[
								"#!/bin/bash\n",
								"export LANG=en_US.UTF-8\n",
								"export HOME=/home/ubuntu\n",
								"wget -t 20 https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/13.10/x86_64/chefdk_0.1.0-1_amd64.deb >> /home/ubuntu/init-commands.txt\n",
								"dpkg -i chefdk_0.1.0-1_amd64.deb >> /home/ubuntu/init-commands.txt\n",
								"apt-get update >> /home/ubuntu/init-commands.txt\n",
								"apt-get install -y git >> /home/ubuntu/init-commands.txt\n",
								"git clone https://github.com/onyx-platform/onyx-benchmark.git >> /home/ubuntu/init-commands.txt\n",
								"chown -R ubuntu:ubuntu onyx-benchmark\n",
								"cd onyx-benchmark/chef/ec2\n",
								"berks install &> /home/ubuntu/berks-install.log\n",
								"berks vendor vendors &> /home/ubuntu/berks-vendors.log\n",
								"chef-solo -j metrics-node.json -c solo.rb &> /home/ubuntu/chef.log\n",
								"cfn-signal -e $? ",
								"         --stack ", { "Ref" : "AWS::StackName" },
								"         --resource MetricsClusterGroup ",
								"         --region ", { "Ref" : "AWS::Region" }
							]
						]
					}
				}
			}
		},
		"PeersClusterGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"DependsOn" : [ "GatewayToInternet", "MetricsClusterGroup", "ZooKeeperClusterGroup" ],
			"Properties" : {
				"LaunchConfigurationName" : { "Ref" : "PeersLaunchConfig" },
				"DesiredCapacity" : { "Ref" : "PeersNumberOfInstances"},
				"MinSize" : "1",
				"MaxSize" : "15",
				"AvailabilityZones" : [ { "Ref": "AvailabilityZone" } ],
				"VPCZoneIdentifier" : [{ "Ref" : "PublicSubnet" }],
				"Tags" : [ {"Key" : "StackID", "Value" : { "Ref" : "AWS::StackId"}, "PropagateAtLaunch" : "true" },
					   {"Key" : "stack-region", "Value" : { "Ref": "AWS::Region" }, "PropagateAtLaunch" : "true" },
					   {"Key" : "stack-name", "Value" : { "Ref": "AWS::StackName" }, "PropagateAtLaunch" : "true" },
					   {"Key" : "stack-role", "Value" : "peer", "PropagateAtLaunch" : "true" }]
			},
                    "CreationPolicy" : {
			    "ResourceSignal" : {
				    "Timeout" : "PT40M",
				    "Count": { "Ref": "PeersNumberOfInstances" }
			    }
		    }
		},
		"PeersLaunchConfig" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"DependsOn" : "GatewayToInternet",
			"Metadata" : {
				"AWS::CloudFormation::Init" : {
					"configSets" : {
						"peer-run": [ "fileConfig", "commandConfig" ]
					},

					"fileConfig" : {
						"files" : {
							"/etc/cfn/cfn-hup.conf" : {
								"content" : { "Fn::Join" : ["", [
									"[main]\n",
									"stack=", { "Ref" : "AWS::StackName" }, "\n",
									"region=", { "Ref" : "AWS::Region" }, "\n",
									"interval=1\n"
								]]},
								"mode"    : "000400",
								"owner"   : "root",
								"group"   : "root"
							},

							"/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
								"content": { "Fn::Join" : ["", [
									"[cfn-auto-reloader-hook]\n",
									"triggers=post.update\n",
									"path=Resources.PeersLaunchConfig.Metadata.AWS::CloudFormation::Init\n",
									"action=/usr/local/bin/cfn-init -c peer-run -s ",
									{ "Ref" : "AWS::StackName" }, " -r PeersLaunchConfig ",
									" --region ", { "Ref" : "AWS::Region" }, "\n",
									"runas=root\n"
								]]}
							}
						}
					},

					"commandConfig" : {
						"commands" : {
							"run-peer" : {
								"command" : { "Fn::Join" : ["", 
									["./run_peer.sh ",  
										{ "Ref" : "OnyxGitCommit" }, " ", 
										{ "Ref" : "BenchmarkGitCommit" }, " ",
										{ "Ref" : "RunId" }, " ",
										{ "Ref": "VirtualPeers" }, " ",
										{ "Ref": "OnyxMessaging" }, " ",
										{ "Ref": "OnyxLogLevel" }, " ",
										">> /home/ubuntu/init-commands.txt 2>&1 "]]},
										"ignoreErrors" : "false",
										"cwd" : "/onyx-benchmark"
							}
						}
					}
				}
			},

			"Properties" : {
				"InstanceType" : { "Ref" : "PeersInstanceType"},
				"SpotPrice" : { "Ref" : "PeerSpotPrice" } ,
				"KeyName" : { "Ref" : "KeyPair" },
				"ImageId" : { "Fn::FindInMap" : [ "AWSRegionalAMIs", { "Ref": "AWS::Region" }, "64HVM" ] },
				"AssociatePublicIpAddress" : "true",
				"SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
				"UserData": {
					"Fn::Base64" : {
						"Fn::Join" : [
							"",
							[
								"#!/bin/bash\n",
								"export LANG=en_US.UTF-8\n",
								"export HOME=/home/ubuntu\n",
								"export AWS_ACCESS_KEY_ID=", { "Ref" : "AccessKeyId" }, "\n",
								"export AWS_SECRET_ACCESS_KEY=", { "Ref": "SecretAccessKey" }, "\n",
								"export AWS_DEFAULT_REGION=", { "Ref" : "AWS::Region" }, "\n",
								"export LEIN_ROOT=1\n",
								"mkdir /etc/cfn", "\n",
								"apt-get update", "\n",
								"apt-get install -y python-pip\n",
								"wget -t 20 https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/13.10/x86_64/chefdk_0.1.0-1_amd64.deb\n",
								"dpkg -i chefdk_0.1.0-1_amd64.deb\n",
								"apt-get install -y git\n",
								"git clone https://github.com/onyx-platform/onyx.git\n",
								"git clone https://github.com/onyx-platform/onyx-benchmark.git\n",
								"chown -R ubuntu:ubuntu onyx-benchmark\n",
								"pip install awscli\n",
								"aws ec2 describe-instances > /home/ubuntu/instances.json\n",
								"cd onyx-benchmark/chef/ec2\n",
								"berks install &> /home/ubuntu/berks-install.log\n",
								"berks vendor vendors &> /home/ubuntu/berks-vendor.log\n",
								"chef-solo -j peer-pre-node.json -c solo.rb &> /home/ubuntu/chef-pre.log\n",
								"cd /onyx\n",
								"git checkout ", { "Ref" : "OnyxGitCommit" }, " >& /home/ubuntu/lein-cmds1.log\n",
								"lein install >& /home/ubuntu/lein-cmds2.log\n",
								"cd /onyx-benchmark\n",
								"lein run -m onyx-benchmark.util ", { "Ref" : "AWS::StackName" }, " ", { "Ref" : "AWS::Region" }, " ", "/home/ubuntu/instances.json >& /home/ubuntu/lein-cmds3.log\n",
								"cd chef/ec2\n",
								"chef-solo -j peer-post-node.json -c solo.rb &> /home/ubuntu/chef-post.log\n",
								"chmod +x /onyx-benchmark/aws/peer_cfn_hup/run_peer.sh\n",
								"/usr/local/bin/cfn-init -v -c peer-run -s ", { "Ref" : "AWS::StackName" }, " -r PeersLaunchConfig ",
								"    --region ", { "Ref" : "AWS::Region" }, " >> /var/log/cfn-init.log\n",
								"/usr/local/bin/cfn-hup -c /etc/cfn\n",
								"cfn-signal -e $? ",
								"         --stack ", { "Ref" : "AWS::StackName" },
								"         --resource PeersClusterGroup ",
								"         --region ", { "Ref" : "AWS::Region" }
							]
						]
					}
				}
			}
		},

		"VPC" : {
			"Type" : "AWS::EC2::VPC",
			"Properties" : {
				"CidrBlock" : "10.0.0.0/16",
				"EnableDnsSupport" : "true",
				"EnableDnsHostnames" : "true",
				"Tags" : [ {"Key" : "StackID", "Value" : { "Ref" : "AWS::StackId"} } ]
			}
		},

		"PublicSubnet" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"CidrBlock" : "10.0.0.0/24",
				"AvailabilityZone" : { "Ref": "AvailabilityZone" },
				"Tags" : [ {"Key" : "StackID", "Value" : { "Ref" : "AWS::StackId"} } ]
			}
		},

		"InternetGateway" : {
			"Type" : "AWS::EC2::InternetGateway",
			"Properties" : {
				"Tags" : [ {"Key" : "StackID", "Value" : { "Ref" : "AWS::StackId"} } ]
			}
		},

		"GatewayToInternet" : {
			"Type" : "AWS::EC2::VPCGatewayAttachment",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"InternetGatewayId" : { "Ref" : "InternetGateway" }
			}
		},

		"PublicRouteTable" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"Tags" : [ {"Key" : "StackID", "Value" : { "Ref" : "AWS::StackId"} } ]
			}
		},

		"PublicRoute" : {
			"Type" : "AWS::EC2::Route",
			"DependsOn" : "GatewayToInternet",
			"Properties" : {
				"RouteTableId" : { "Ref" : "PublicRouteTable" },
				"DestinationCidrBlock" : "0.0.0.0/0",
				"GatewayId" : { "Ref" : "InternetGateway" }
			}
		},

		"PublicSubnetRouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"SubnetId" : { "Ref" : "PublicSubnet" },
				"RouteTableId" : { "Ref" : "PublicRouteTable" }
			}
		},

		"InstanceSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Enable ports needed by SSH and metrics and ZK",
				"VpcId" : { "Ref" : "VPC" },
				"SecurityGroupIngress" : [ {
					"IpProtocol" : "tcp",
					"FromPort" : "22",
					"ToPort" : "22",
					"CidrIp" : "0.0.0.0/0"
				},
				{
					"IpProtocol" : "tcp",
					"FromPort" : "5555",
					"ToPort" : "5555",
					"CidrIp" : "10.0.0.0/16"

				},
				{
					"IpProtocol" : "tcp",
					"FromPort" : "40000",
					"ToPort" : "40200",
					"CidrIp" : "10.0.0.0/16"
				},
				{
					"IpProtocol" : "udp",
					"FromPort" : "40000",
					"ToPort" : "40200",
					"CidrIp" : "10.0.0.0/16"
				},
				{
					"IpProtocol" : "tcp",
					"FromPort" : "2181",
					"ToPort" : "2181",
					"CidrIp" : "0.0.0.0/0"

				},
				{
					"IpProtocol" : "tcp",
					"FromPort" : "8080",
					"ToPort" : "8080",
					"CidrIp" : "0.0.0.0/0"

				},
				{
					"IpProtocol" : "icmp",
					"FromPort" : "-1",
					"ToPort" : "-1",
					"CidrIp" : "0.0.0.0/0"
				} ],
				"Tags" : [ {"Key" : "StackID", "Value" : { "Ref" : "AWS::StackId"} } ]
			}
		}
	}
}
